[{"D:\\code\\FORMIK--YUP\\react-forms-&-user-input\\src\\index.js":"1","D:\\code\\FORMIK--YUP\\react-forms-&-user-input\\src\\App.js":"2","D:\\code\\FORMIK--YUP\\react-forms-&-user-input\\src\\components\\SimpleInput.js":"3","D:\\code\\FORMIK--YUP\\react-forms-&-user-input\\src\\hooks\\use-input.js":"4","D:\\code\\FORMIK--YUP\\react-forms-&-user-input\\src\\components\\BasicForm.js":"5"},{"size":142,"mtime":1616595887000,"results":"6","hashOfConfig":"7"},{"size":248,"mtime":1636099149850,"results":"8","hashOfConfig":"7"},{"size":3122,"mtime":1636085778231,"results":"9","hashOfConfig":"7"},{"size":791,"mtime":1636081648831,"results":"10","hashOfConfig":"7"},{"size":3152,"mtime":1636117913114,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"18v54n1",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\code\\FORMIK--YUP\\react-forms-&-user-input\\src\\index.js",[],["24","25"],"D:\\code\\FORMIK--YUP\\react-forms-&-user-input\\src\\App.js",[],"D:\\code\\FORMIK--YUP\\react-forms-&-user-input\\src\\components\\SimpleInput.js",[],"D:\\code\\FORMIK--YUP\\react-forms-&-user-input\\src\\hooks\\use-input.js",["26"],"import React, { useState } from 'react';\r\n\r\nconst useInput = (validateValue) => {\r\n  const [enteredValue, setEnteredValue] = useState('');\r\n  const [isTouched, setIsTouched] = useState(false);\r\n\r\n  //   const valueIsValid = enteredValue.trim() !== '';\r\n  const valueIsValid = validateValue(enteredValue);\r\n  const hasError = !valueIsValid && isTouched;\r\n  //\r\n  const valueChangeHandler = (e) => {\r\n    setEnteredValue(e.target.value);\r\n  };\r\n  //\r\n  const inputBlurHandler = (e) => {\r\n    setIsTouched(true);\r\n  };\r\n  //\r\n  const reset = () => {\r\n    setEnteredValue('');\r\n    setIsTouched(false);\r\n  };\r\n  //\r\n  return {\r\n    value: enteredValue,\r\n    isValid: valueIsValid,\r\n    hasError,\r\n    valueChangeHandler,\r\n    inputBlurHandler,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n","D:\\code\\FORMIK--YUP\\react-forms-&-user-input\\src\\components\\BasicForm.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":8,"nodeType":"33","messageId":"34","endLine":1,"endColumn":13},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]